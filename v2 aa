--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local camera = workspace.CurrentCamera

--// Feature Flags
_G.ESPEnabled = false
_G.SpeedLocked = false
_G.CameraLocked = false
_G.AirCountdownEnabled = false
_G.InfiniteJumpEnabled = false

--// GUI
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "@agfx"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 400, 0, 400)
mainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
mainFrame.BorderSizePixel = 1
mainFrame.Active = true
mainFrame.Draggable = true
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 10)

local title = Instance.new("TextLabel", mainFrame)
title.Text = "agfx v2"
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.BorderSizePixel = 0
title.Name = "Title"
Instance.new("UICorner", title).CornerRadius = UDim.new(0, 10)

--// Create Button Function
local function createButton(parent, text, pos, flag, onEnable, onDisable)
	local btn = Instance.new("TextButton", parent)
	btn.Size = UDim2.new(0, 180, 0, 40)
	btn.Position = pos
	btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 16
	btn.Text = text .. ": OFF"
	btn.BorderSizePixel = 0
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

	btn.MouseEnter:Connect(function()
		TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
	end)
	btn.MouseLeave:Connect(function()
		TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
	end)

	btn.MouseButton1Click:Connect(function()
		_G[flag] = not _G[flag]
		btn.Text = text .. ": " .. (_G[flag] and "ON" or "OFF")
		if _G[flag] then
			if onEnable then onEnable() end
		else
			if onDisable then onDisable() end
		end
	end)

	return btn
end

--// ESP Logic
local function isEnemy(p) return p.Team ~= player.Team end

local function applyESP(char)
	if not char:FindFirstChild("AgfxHighlight") then
		local hl = Instance.new("Highlight", char)
		hl.Name = "AgfxHighlight"
		hl.FillTransparency = 1
		hl.OutlineTransparency = 0
		hl.OutlineColor = Color3.new(1, 1, 1)
		hl.Adornee = char
	end
end

local function removeESP(char)
	local hl = char:FindFirstChild("AgfxHighlight")
	if hl then hl:Destroy() end
end

local function updateESP()
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= player and p.Character and isEnemy(p) then
			if _G.ESPEnabled then applyESP(p.Character) else removeESP(p.Character) end
		end
	end
end

RunService.Stepped:Connect(function()
	if _G.ESPEnabled then updateESP() end
end)

--// Speed Lock
RunService.Heartbeat:Connect(function()
	if _G.SpeedLocked and humanoid then
		humanoid.WalkSpeed = 23
	end
end)

--// Infinite Jump
local function setupJump(h)
	UserInputService.JumpRequest:Connect(function()
		if _G.InfiniteJumpEnabled then h:ChangeState(Enum.HumanoidStateType.Jumping) end
	end)
end

setupJump(humanoid)
player.CharacterAdded:Connect(function(char)
	humanoid = char:WaitForChild("Humanoid")
	setupJump(humanoid)
	connectStateMonitor(humanoid)
end)

--// Camera Lock
local lockedTarget = nil
RunService.RenderStepped:Connect(function()
	if _G.CameraLocked and lockedTarget and lockedTarget.Parent then
		camera.CFrame = CFrame.new(camera.CFrame.Position, lockedTarget.Position)
	end
end)

--// Air Countdown
local airGui = Instance.new("ScreenGui", player.PlayerGui)
airGui.Name = "AirCountdownGui"
airGui.ResetOnSpawn = false

local label = Instance.new("TextLabel", airGui)
label.Size = UDim2.new(0, 200, 0, 50)
label.Position = UDim2.new(0.5, -100, 0.3, 0)
label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
label.BackgroundTransparency = 0.3
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.TextScaled = true
label.Visible = false
label.Font = Enum.Font.GothamBold
label.Text = "1.2"

local isCounting = false
local function startCountdown()
	if isCounting or not _G.AirCountdownEnabled then return end
	isCounting = true
	label.Visible = true
	local t = 1.2
	while t > 0 and isCounting do
		label.Text = string.format("%.1f", t)
		t -= RunService.RenderStepped:Wait()
	end
	label.Visible = false
	isCounting = false
end

function connectStateMonitor(h)
	h.StateChanged:Connect(function(_, state)
		if state == Enum.HumanoidStateType.Freefall or state == Enum.HumanoidStateType.Jumping then
			startCountdown()
		else
			isCounting = false
			label.Visible = false
		end
	end)
end

RunService.Stepped:Connect(function()
	if _G.NoClipEnabled and player.Character then
		for _, part in ipairs(player.Character:GetDescendants()) do
			if part:IsA("BasePart") and part.CanCollide then
				part.CanCollide = false
			end
		end
	end
end)

player.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid")
	if _G.NoClipEnabled then
		task.wait(1)
		for _, part in ipairs(char:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = false
			end
		end
	end
end)

connectStateMonitor(humanoid)

--// Buttons
createButton(mainFrame, "ESP opp", UDim2.new(0, 20, 0, 60), "ESPEnabled", updateESP, updateESP)
createButton(mainFrame, "Speed", UDim2.new(0, 200, 0, 60), "SpeedLocked")
createButton(mainFrame, "Aimbot - X", UDim2.new(0, 20, 0, 110), "CameraLocked")
createButton(mainFrame, "BW AC Timer", UDim2.new(0, 200, 0, 110), "AirCountdownEnabled")
createButton(mainFrame, "Fly Jump", UDim2.new(0, 20, 0, 160), "InfiniteJumpEnabled")
createButton(mainFrame, "NoClip", UDim2.new(0, 200, 0, 160), "NoClipEnabled")

--// Opacity Slider
local slider = Instance.new("Frame", mainFrame)
slider.Size = UDim2.new(0, 360, 0, 40)
slider.Position = UDim2.new(0, 20, 0, 220)
slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
slider.BorderSizePixel = 0
Instance.new("UICorner", slider).CornerRadius = UDim.new(0, 6)

local bar = Instance.new("Frame", slider)
bar.Size = UDim2.new(1, -20, 0, 6)
bar.Position = UDim2.new(0, 10, 0.5, -3)
bar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
bar.BorderSizePixel = 0
Instance.new("UICorner", bar).CornerRadius = UDim.new(0, 3)

local knob = Instance.new("Frame", bar)
knob.Size = UDim2.new(0, 10, 0, 16)
knob.Position = UDim2.new(0, 0, -0.5, -5)
knob.BackgroundColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", knob).CornerRadius = UDim.new(0, 4)

local dragging = false
local function setOpacity(x)
	local barPos = bar.AbsolutePosition.X
	local barWidth = bar.AbsoluteSize.X
	local newX = math.clamp(x - barPos, 0, barWidth)
	local percent = newX / barWidth
	knob.Position = UDim2.new(0, newX, -0.5, -5)
	mainFrame.BackgroundTransparency = percent
	for _, ui in ipairs(mainFrame:GetDescendants()) do
		if ui:IsA("TextLabel") or ui:IsA("TextButton") or ui:IsA("Frame") then
			ui.BackgroundTransparency = percent
		end
	end
end

knob.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		mainFrame.Draggable = false
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
		mainFrame.Draggable = true
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		setOpacity(input.Position.X)
	end
end)

--// Keybinds (ONLY CAMLOCK MODIFIED BELOW)
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end

	if input.KeyCode == Enum.KeyCode.RightShift then
		mainFrame.Visible = not mainFrame.Visible
	elseif input.KeyCode == Enum.KeyCode.X then
		_G.CameraLocked = not _G.CameraLocked
		if _G.CameraLocked then
			local closest, dist = nil, math.huge
			for _, p in ipairs(Players:GetPlayers()) do
				if p ~= player and p.Team ~= player.Team and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
					local hrp = p.Character.HumanoidRootPart
					local mag = (hrp.Position - camera.CFrame.Position).Magnitude
					if mag < dist then
						dist = mag
						closest = hrp
					end
				end
			end
			lockedTarget = closest
		else
			lockedTarget = nil
		end
	end
end)
